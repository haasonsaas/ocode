[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ocode"
version = "0.1.0"
description = "Terminal-native AI coding assistant powered by Ollama models"
authors = [{name = "OCode Team", email = "team@ocode.dev"}]
license = {text = "AGPL-3.0"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Tools",
    "Topic :: Terminals",
]
dependencies = [
    "aiohttp>=3.9",
    "click>=8.1",
    "rich>=13",
    "gitpython>=3.1",
    "tree-sitter>=0.20",
    "pydantic>=2",
    "pyyaml>=6",
    "prompt-toolkit>=3",
    "aiofiles>=23",
    "watchdog>=3",
    "pexpect>=4.9.0",
    "psutil>=5.9.0",
    "jsonpath-ng>=1.5.3",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21",
    "pytest-cov>=4.0",
    "black>=23.0",
    "isort>=5.12",
    "mypy>=1.0",
    "flake8>=6.0",
    "types-pyyaml>=6.0",
    "types-requests>=2.31",
]

[project.scripts]
ocode = "ocode_python.core.cli:main"

[project.urls]
Homepage = "https://github.com/haasonsaas/ocode"
Repository = "https://github.com/haasonsaas/ocode"
Documentation = "https://github.com/haasonsaas/ocode/blob/main/README.md"
Issues = "https://github.com/haasonsaas/ocode/issues"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ocode_python"]
known_third_party = ["click", "rich", "aiohttp", "git", "pytest"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "venv/",
    ".venv/",
    "dev-env/",
    "build/",
    "dist/",
]

[[tool.mypy.overrides]]
module = [
    "git.*",
    "tree_sitter.*",
    "psutil.*",
    "aiofiles.*",
    "watchdog.*",
    "pexpect.*",
    "jsonpath_ng.*",
    "dotenv.*",
    "pydantic.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--tb=short",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow tests",
    "network: Tests requiring network access",
    "security: Security-related tests",
    "mcp: MCP protocol tests",
    "cli: CLI tests",
    "tools: Tool tests",
    "performance: Performance tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
asyncio_mode = "strict"

[tool.coverage.run]
source = ["ocode_python"]
omit = [
    "tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
targets = ["ocode_python"]
exclude_dirs = ["tests", "venv", ".venv", "build", "dist"]
skips = ["B101", "B601"]  # B101: assert_used, B601: paramiko_calls